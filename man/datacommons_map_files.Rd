% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datacommons_map_files.R
\name{datacommons_map_files}
\alias{datacommons_map_files}
\title{Map Data Commons Files}
\usage{
datacommons_map_files(dir, search_pattern = "\\\\.csv(?:\\\\.[gbx]z2?)?$",
  variable_location = "measure", id_location = "geoid",
  use_manifest = FALSE, reader = read.csv, overwrite = FALSE,
  verbose = TRUE)
}
\arguments{
\item{dir}{Directory of the data commons projects.}

\item{search_pattern}{A regular expression string used be passed to \code{\link{list.files}}.}

\item{variable_location}{The name of a column contain variable names in each dataset, or a function to retrieve
variable names (e.g., \code{colnames}).}

\item{id_location}{The name of a column contain IDs in each dataset, or a function to retrieve
IDs (e.g., \code{rownames}).}

\item{use_manifest}{Logical; if \code{TRUE}, will search for manifest files in each repository to use as file lists.
These should have \code{data} entries with object arrays containing a \code{path} entry
(e.g., \code{'{"data: [{"path": "path/from/root/data.csv"}]"}'}).}

\item{reader}{A function capable of handling a connection in its first argument, which returns a matrix-like object.}

\item{overwrite}{Logical; if \code{TRUE}, creates a new map even if one exists.}

\item{verbose}{Logical; if \code{FALSE}, does not print status messages.}
}
\value{
An invisible \code{list}, including a \code{data.frame} of the mapped variables, with \code{variable} (variable name),
\code{repo} (the repository containing the file), \code{dir_name} (variable name with a prefix from the parent directories),
\code{full_name} (variable name with a prefix from the last part of the file's name, after a year or year range),
and \code{file} (path to the file) columns, and a \code{list} of the mapped IDs, with an entry for each ID,
each of which with entries for \code{repos} (repositories in which the ID appears) and \code{files} (files in which the ID appears).
}
\description{
Extract variables and IDs from files in datacommons repositories
}
\examples{
\dontrun{
# from a data commons project directory
map <- datacommons_map_files(".")
}
}
