% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/site_build.R, R/site_start_server.R
\name{site_build}
\alias{site_build}
\alias{site_start_server}
\title{Render a Website}
\usage{
site_build(dir, file = "site.R", name = "index.html", variables = NULL,
  options = list(), bundle_data = FALSE, bundle_package = FALSE,
  bundle_libs = FALSE, libs_overwrite = FALSE, libs_base_only = FALSE,
  remote_data_handler = TRUE, open_after = FALSE, aggregate = TRUE,
  sparse_time = TRUE, force = FALSE, version = "stable", parent = NULL,
  include_api = FALSE, endpoint = NULL, tag_id = NULL, serve = FALSE,
  host = "127.0.0.1", port = 3000, verbose = TRUE)

site_start_server(dir, host = "127.0.0.1", port = 3000)
}
\arguments{
\item{dir}{Path to the site project directory.}

\item{file}{Name of the R file to build the site from.}

\item{name}{Name of the HTML file to be created.}

\item{variables}{A character vector of variable names to include from the data. If no specified,
all variables are included.}

\item{options}{A list with options to be passed to the site. These will be written to \code{docs/settings.json},
which can be edited by hand.}

\item{bundle_data}{Logical; if \code{TRUE}, will write the data to the site file; useful when
running the site locally without a server (viewing the file directly in a browser).
Otherwise, the data will be loaded separately through an http request.}

\item{bundle_package}{Logical; if \code{TRUE}, will include parts of the \code{datapackage.json} file in the
\code{settings.json} and \code{index.html} files. Otherwise, this will be loaded separately through an http request.}

\item{bundle_libs}{Logical; if \code{TRUE}, will download dependencies to the \code{docs/lib} directory.
This can allow you to run the site offline for all but Leaflet tiles and any remote resources specified in
\code{file} (such as map shapes) or metadata (such as map overlays).}

\item{libs_overwrite}{Logical; if \code{TRUE}, will re-download existing dependencies.}

\item{libs_base_only}{Logical; if \code{TRUE}, will only download the base community dependencies to be served locally.}

\item{remote_data_handler}{Logical; if \code{FALSE}, will load the data handler script from the site's directory,
(which is updated on rebuild) even when \code{version} is custom. Useful for locally testing an API.}

\item{open_after}{Logical; if \code{TRUE}, will open the site in a browser after it is built.}

\item{aggregate}{Logical; if \code{TRUE}, and there is a larger datasets with IDs that partially match
IDs in a smaller dataset or that has a map to those IDs, and there are NAs in the smaller dataset, will
attempt to fill NAs with averages from the larger dataset.}

\item{sparse_time}{Logical; if \code{FALSE}, will not trim times from a variable that are all missing.}

\item{force}{Logical; if \code{TRUE}, will reprocess data even if the source data is older than the existing
processed version.}

\item{version}{Version of the base script and stylesheet: \code{"stable"} (default) for the current stable release,
\code{"dev"} for the current unstable release, or \code{"local"} for a copy of the development files
(\code{community.js} and \code{community.css}) served from \code{http://localhost:8000}. Can also
be a URL where files can be found (\code{{version}/community.js} and \code{{version}/community.css}).}

\item{parent}{Directory path or repository URL of a data site from which to use data, rather than using local data.}

\item{include_api}{Logical; if \code{TRUE}, will write the \code{docs/functions/api.js} file.}

\item{endpoint}{URL of the served API.}

\item{tag_id}{Google tag ID (in the form of \code{GTM-XXXXXX}, were \code{GTM-} might be different depending on the
tag type (such as \code{G-} or \code{GT-}); see \href{tagmanager.google.com}{https://tagmanager.google.com}),
which will enables tracking, conditional on the \code{settings.tracking} setting.}

\item{serve}{Logical; if \code{TRUE}, starts a local server from the site's \code{docs} directory.
Once a server is running, you can use \code{\link[httpuv]{stopAllServers}} to stop it.}

\item{host}{The IPv4 address to listen to if \code{serve} is \code{TRUE}; defaults to \code{"127.0.0.1"}.}

\item{port}{The port to listen on if \code{serve} is \code{TRUE}; defaults to 3000.}

\item{verbose}{Logical; if \code{FALSE}, will not show status messages.}
}
\value{
Invisible path to the written file.
}
\description{
Write HTML output from the \code{site.R} file in a site project.
}
\examples{
\dontrun{
# run from within a site project directory, initialized with `init_site()`
site_build(".")

# serve locally and view the site
site_build(".", serve = TRUE, open_after = TRUE)
}
\dontrun{
# serve a site that has already been built
# from the parent directory of a "docs" directory to be served
site_start_server(".")
}
}
\seealso{
To initialize a site project, use \code{\link{init_site}}.
}
